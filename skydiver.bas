10 REM ** SKY DIVER - WRITTEN BY **
20 REM ** PAUL BUNN DECEMBER 1982 **
25 IF PEEK(203)=PEEK(106)-8 THEN 40
30 GOSUB 10000:REM INITIALIZATION
40 DIM PLANE$(1),MAN$(1),CHUTE$(1),BASE$(1),LINE$(1)
50 PLANE$=CHR$(ASC("&")+128):MAN$="!": LINE$=CHR$(ASC("#")+96)
55 FOR JUMP=1 TO 10
60 GRAPHICS 17:SETCOLOR 2,12,10:POKE 16,
64 POKE 53774,64
61 POKE 53277,3:REM * ENABLE PLAYER MISSILE GRAPHICS *
62 POKE 559,46:REM * DOUBLE LINE RESOLUTION FOR PLAYERS *
63 POKE 54279,PEEK(204):REM * TELL ANTIC WHERE PM GRAPHICS ARE IN RAM *
64 POKE 53256,3:POKE 53257,3:REM * QUADROUPLE SIZE FOR CLOUDS *
65 POKE 704,8:POKE 705,14:REM * COLOUR FOR CLOUDS *
66 X3=INT(RND(0)*100)+75:POKE 53248,X3:REM ** RANDOM HORIZONTAL POSITION FOR 
CLOUD 1 **
67 X4=INT(RND(0)*100)+75:POKE 53249,X3:REM ** RANDOM HORIZONTAL POSITION FOR 
CLOUD 2 **
68 POKE 623,1:REM * SET PRIORITY BETWEEN PLAYERS AND PLAYFIELDS *
69 POKE 53278,255:REM * CLEAR COLLISION DETECTION REGISTERS *
70 POKE 756,PEEK(203):SETCOLOR 3,3,4:REM * POINT TO NEW CHARACTER SET IN RAM 
INSTEAD OF ROM *
80 X=1:BASE$="#":CHUTE$=CHR$(ASC("%")+128
85 REM ** PRINT BASE LINE **
90 FOR P=0 TO 19
100 POSITION P,23
110 PRINT #6;LINE$;
120 NEXT P
130 BASE=INT(RND(0)*16)+2
140 POSITION BASE,22 
150 ? #6;BASE$
155 REM ** MAIN PROGRAM LOOP **
160 POSITION X,0:? #6;PLANE$:POSITION X-1,0:? #6;" "
170 X=X+1:IF X<19 THEN 190
180 POSITION X-1,0:? #6;" ":X=1
185 REM ** JOYSTICK ROUTINE **
190 S1=STICK(0):S2=STRIG(0)
191 X3=X3-3:IF X3<20 THEN X3=220
192 X4-X4+3:IF X4>220 THEN X4=20
193 POKE 53248,X3:POKE 53249,X:4
200 IF MAN=0 AND S2=0 THEN GOSUB 1000
205 IF MAN=1 THEN LOCATE X2,Y2:Z
210 IF MAN=1 THEN POSITION X2,Y2:? #6;MAN$
220 IF CHUTE=1 THEN POSITION X2,Y2-1:? #6;CHUTE$:FOR P= 1 TO 100:NEXT P
222 IF PEEK(53252)<>0 OR PEEK(53253)<>0 THEN 2080
225 IF Y2=22 AND MAN=1 THEN 2000
230 OX=X2:X2=X2+(S1=7)-(X2>l8)
240 OY=Y2:X2=X2-(S1=11)+(X2<l):Y2=Y2+1
250 IF S1=13 AND MAN=1 AND CHUTE=0 AND Y2<19 THEN CHUTE=1:FOR T=0 TO 50
:SOUND 0,T,120,15:NEXT T:SOUND 0,0,0,0:C=Y2
255 IF MAN=0 THEN 160
260 POSITION OX,OY-1:? #6;" "
270 POSITION OX,Y2-1:? #6;" "
280 GOTO 160
999 REM ** MAN OPENS CHUTE **
1000 MAN=1:Y2=2:X2=X
1010 FOR P=30 TO 0 STEP -2:SOUND 0,P,120,15:NEXT P:SOUND 0,0,0,0:RETURN
2000 IF Z=ASC(BASE$) THEN GOTO 3000
2010 FOR G=0 TO 255
2020 SOUND 0,G,10,15:POKE 708,G
2030 NEXT G
2040 FOR G=255 TO 0 STEP -3
2050 SOUND 0,G,10,15:POKE 708,G
2060 NEXT G
2070 SOUND 0,0,0,0 
2080 POSITION 0,0:POKE 708,104
2090 ? #6;">>>>>SPLAT<<<<<"
2095 ? #6;"SCORE:";SCORE
2100 ? #6:? #6;"PRESS start TO PLAY"
2110 POKE 53279,0
2120 IF PEEK(53279)<>6 THEN 2110
2130 RUN
3000 POSITION 0,0
3010 IF CHUTE=1 THEN 3500
3020 ? #6;"YOU DID NOT HAUE"
3030 ? #6;"your chute open"
3040 ? #6;? #6;"   OHCH ..."
3050 ? #6
3060 FOR P=0 TO 150 STEP 2
3070 SOUND 0,P,12,15
3080 NEXT P
3090 SOUND 0,0,0,0
3100 GOTO 2095
3500 ? #6;"well done ..."
3510 ? #6;"YOU MANAGED TO LAND"
3520 ? #6;"ON THE PAD WITH YOUR"
3530 ? #6;"CHUTE OPEN ..."
3540 POSITION 3,10:? #6;"score:"
3550 BONUS=C*75
3560 FOR P=0 TO BONUS STEP 5
3570 POSITION 9,10:? #6;SCORE+P
3580 SOUND 0,P*25,10,15
3590 NEXT P
3600 SCORE=SCORE=SCORE+BONUS
3610 SOUND 0,0,0,0
3620 MAN=0:CHUTE=0:NEXT JUMP
3630 GRAPHICS 2:POKE 53248,0:POKE 53249,0
3640 ? #6;"YOU'VE SUCCESSFULLY"
3650 ? #6;"  LANDED 10 TIMES"
3660 ? #6
3670 ? #6;"your final score :-"
3680 ? #6;"     ";SCORE
3690 SETCOLOR 2,0,0
3700 FOR P=5 TO 200 STEP 3 
3710 FOR G=P-5 TO P+5
3720 SOUND 0,G,10,15
3730 SETCOLOR 1,RNO(0)*15,8
3750 NEXT P
3760 SOUND 0,0,0,0
3770 END
10000 RAM=PEEK(106)-8:A=256*RAM
10010 GRAPHICS 0
10020 SETCOLOR 4,9,2:SETCOLOR 2,9,2
10030 PRINT CHR$(127);"PLEASE WAIT A LITTLE WHILE"
10040 PRINT CHR$(127);"**************************"
10050 POKE 752,1:PRINT
10055 REM ** COPY CHARACTER SET FROM ROM INTO RAM **
10060 FOR P=0 TO 1023
10070 POKE A+P,PEEK(57344+P)
10080 SOUND 0,PEEK(53770),10,2 
10090 NEXT P:SOUND 0,0,0,0
10100 READ
10110 IF X<0 THEN POKE 203,RAM:GOTO 10220
10120 FOR P=0 TO 7
10130 READ Y
10140 POKE (X*8)+A+P,Y
10150 NEXT P
10160 GOTO 10100
10165 REM ** DATA FOR REEDEFINED CHARACTER **
10180 DATA 5,0,0,0,24,60,126,195,129
10190 DATA 3,255,255,255,255,255,255,255,255
10200 DATA 6,16,8,132,194,255,2,4,8 
10210 DATA -1
10220 R=RAM-8
10225 REM ** CLEAR OUT PLAYER MISSILE GRAPHICS MEMORY ** 
10230 FOR P=512 TO 768
10240 POKE R*256+P,0:NEXT P
10245 REM ** POKE IN DATA FOR CLOUD PLAYERS **
10250 FOR P=0 TO 7
10260 READ X
10270 POKE R*256+70+P+512,X
10280 POKE R*256+50+P+640,X
10280 NEXT P
10300 POKE 204,R
10310 RETURN
10315 REM ** DATA FOR P.M. GRAPHICS **
10320 DATA 16,126,127,255,126,62,28,8 

